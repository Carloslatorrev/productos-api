name: Build and deploy container app to Azure Web App - productosapp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # Usamos un runner de Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Clona el código del repositorio

      # Paso para configurar Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'  # Define la versión de Java que estás usando para tu aplicación Spring Boot

      # Paso para instalar las dependencias de Maven y construir el proyecto
      - name: Build with Maven
        run: mvn clean install -DskipTests  # Construye el proyecto sin ejecutar las pruebas (puedes cambiar esto si quieres ejecutar las pruebas)

      # Paso para configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Paso para iniciar sesión en Docker Hub
      - name: Log in to container registry
        uses: docker/login-action@v2
        with:
          registry: https://index.docker.io/v1/
          username: ${{ secrets.AzureAppService_ContainerUsername }}  # Usuario de Docker Hub
          password: ${{ secrets.AzureAppService_ContainerPassword }}  # Contraseña de Docker Hub

      # Paso para construir y subir la imagen Docker a Docker Hub
      - name: Build and push container image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .  # Directorio del Dockerfile
          push: true  # Subir la imagen a Docker Hub
          tags: index.docker.io/${{ secrets.AzureAppService_ContainerUsername }}/dockerProductoApp:${{ github.sha }}  # Etiqueta de la imagen Docker
          file: ./Dockerfile  # Asegúrate de que tu Dockerfile esté en la raíz del proyecto

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Este paso depende de que el build se haya completado

    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'productosapp'  # Nombre de la Web App en Azure
          slot-name: 'Production'  # El slot de producción
          publish-profile: ${{ secrets.AzureAppService_PublishProfile }}  # Perfil de publicación desde Azure
          images: 'index.docker.io/${{ secrets.AzureAppService_ContainerUsername }}/dockerProductoApp:${{ github.sha }}'  # Imagen Docker que será desplegada

